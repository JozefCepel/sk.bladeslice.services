<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:tns="http://document.api.dms.dwcslovakia.sk/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsaws="http://www.w3.org/2005/08/addressing" xmlns:t="http://docs.oasis-open.org/ws-sx/ws-trust/200512" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" name="DocumentService" targetNamespace="http://document.api.dms.dwcslovakia.sk/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsp:Policy xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsaws="http://www.w3.org/2005/08/addressing" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:t="http://docs.oasis-open.org/ws-sx/ws-trust/200512" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" wsu:Id="WS2007FederationHttpBinding_IService_policy">
    <wsp:ExactlyOne>
      <wsp:All>
        <sp:TransportBinding>
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken />
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:Basic256 />
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Lax />
              </wsp:Policy>
            </sp:Layout>
            <sp:IncludeTimestamp />
          </wsp:Policy>
        </sp:TransportBinding>
        <sp:EndorsingSupportingTokens>
          <wsp:Policy>
            <sp:IssuedToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
              <sp:RequestSecurityTokenTemplate>
                <t:TokenType>http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1
                            </t:TokenType>
                <t:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey</t:KeyType>
                <t:KeySize>256</t:KeySize>
              </sp:RequestSecurityTokenTemplate>
              <wsp:Policy>
                <sp:RequireInternalReference />
              </wsp:Policy>
              <sp:Issuer>
                <wsaws:Address>
                                https://lbsts.intra.dcom.sk:49443/adfs/services/trust/13/certificatetransport
                            </wsaws:Address>
                <wsaws:Metadata xmlns:wsdli="http://www.w3.org/2006/01/wsdl-instance" wsdli:wsdlLocation="http://lbsts.intra.dcom.sk/adfs/services/trust/mex">
                  <wsaw:ServiceName xmlns:stsns="http://docs.oasis-open.org/ws-sx/ws-trust/200512/" EndpointName="CertificateWSTrustBinding_IWSTrust13Async2">
                                    stsns:SecurityTokenService
                                </wsaw:ServiceName>
                </wsaws:Metadata>
              </sp:Issuer>
            </sp:IssuedToken>
          </wsp:Policy>
        </sp:EndorsingSupportingTokens>
        <sp:Wss11>
          <wsp:Policy />
        </sp:Wss11>
        <sp:Trust13>
          <wsp:Policy>
            <sp:MustSupportIssuedTokens />
            <sp:RequireClientEntropy />
            <sp:RequireServerEntropy />
          </wsp:Policy>
        </sp:Trust13>
        <wsaw:UsingAddressing />
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsdl:types>
    <xs:schema xmlns:tns="http://params.api.dms.dwcslovakia.sk" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://params.api.dms.dwcslovakia.sk" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="document">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean" />
          <xs:element minOccurs="0" name="categoryId" type="xs:string" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="documentId" type="xs:string" />
          <xs:element minOccurs="0" name="extension" type="xs:string" />
          <xs:element minOccurs="0" name="fileStoragePath" type="xs:string" />
          <xs:element minOccurs="0" name="filesize" type="xs:long" />
          <xs:element minOccurs="0" name="folder" type="tns:folder" />
          <xs:element minOccurs="0" name="metadata" type="tns:metadataContainer" />
          <xs:element minOccurs="0" name="modifiedAt" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element minOccurs="0" name="version" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="folder">
        <xs:sequence>
          <xs:element minOccurs="0" name="folderId" type="xs:long" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="parentFolderId" type="xs:long" />
          <xs:element minOccurs="0" name="tenant" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="metadataContainer">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="entry" nillable="true" type="tns:metadata" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="metadata">
        <xs:sequence>
          <xs:element name="key" type="xs:string" />
          <xs:element name="type" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResult">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="documents" nillable="true" type="tns:hitDocument" />
          <xs:element name="page" type="xs:long" />
          <xs:element name="total" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="hitDocument">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:document">
            <xs:sequence>
              <xs:element name="highlight">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="entry">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="key" type="xs:string" />
                          <xs:element minOccurs="0" name="value" type="xs:string" />
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:ns1="http://params.api.dms.dwcslovakia.sk" xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://document.api.dms.dwcslovakia.sk/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://params.api.dms.dwcslovakia.sk" />
      <xs:element name="clearMetadata" type="tns:clearMetadata" />
      <xs:element name="clearMetadataResponse" type="tns:clearMetadataResponse" />
      <xs:element name="createDocument" type="tns:createDocument" />
      <xs:element name="createDocumentResponse" type="tns:createDocumentResponse" />
      <xs:element name="createFolder" type="tns:createFolder" />
      <xs:element name="createFolderResponse" type="tns:createFolderResponse" />
      <xs:element name="deleteDocument" type="tns:deleteDocument" />
      <xs:element name="deleteDocumentResponse" type="tns:deleteDocumentResponse" />
      <xs:element name="deleteFolder" type="tns:deleteFolder" />
      <xs:element name="deleteFolderResponse" type="tns:deleteFolderResponse" />
      <xs:element name="findAllDocuments" type="tns:findAllDocuments" />
      <xs:element name="findAllDocumentsResponse" type="tns:findAllDocumentsResponse" />
      <xs:element name="findDocuments" type="tns:findDocuments" />
      <xs:element name="findDocumentsResponse" type="tns:findDocumentsResponse" />
      <xs:element name="moveFolder" type="tns:moveFolder" />
      <xs:element name="moveFolderDocuments" type="tns:moveFolderDocuments" />
      <xs:element name="moveFolderDocumentsResponse" type="tns:moveFolderDocumentsResponse" />
      <xs:element name="moveFolderResponse" type="tns:moveFolderResponse" />
      <xs:element name="readDocumentById" type="tns:readDocumentById" />
      <xs:element name="readDocumentByIdResponse" type="tns:readDocumentByIdResponse" />
      <xs:element name="readDocumentContent" type="tns:readDocumentContent" />
      <xs:element name="readDocumentContentResponse" type="tns:readDocumentContentResponse" />
      <xs:element name="readFolderDocuments" type="tns:readFolderDocuments" />
      <xs:element name="readFolderDocumentsResponse" type="tns:readFolderDocumentsResponse" />
      <xs:element name="readFolders" type="tns:readFolders" />
      <xs:element name="readFoldersResponse" type="tns:readFoldersResponse" />
      <xs:element name="renameFolder" type="tns:renameFolder" />
      <xs:element name="renameFolderResponse" type="tns:renameFolderResponse" />
      <xs:element name="updateDocument" type="tns:updateDocument" />
      <xs:element name="updateDocumentResponse" type="tns:updateDocumentResponse" />
      <xs:complexType name="updateDocument">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="document" type="ns1:document" />
          <xs:element minOccurs="0" form="qualified" name="content" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDocumentResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="readFolderDocuments">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="folderId" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="readFolderDocumentsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" form="qualified" name="return" type="ns1:document" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="readDocumentContent">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="documentId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="readDocumentContentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" form="qualified" name="return" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moveFolderDocuments">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="folderId" type="xs:long" />
          <xs:element form="qualified" name="newFolderId" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moveFolderDocumentsResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="readFolders">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="folderId" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="readFoldersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" form="qualified" name="return" type="ns1:folder" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createFolder">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="parentFolderId" type="xs:long" />
          <xs:element form="qualified" name="name" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createFolderResponse">
        <xs:sequence>
          <xs:element form="qualified" name="return" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createDocument">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element minOccurs="0" form="qualified" name="categoryId" type="xs:string" />
          <xs:element form="qualified" name="document" type="ns1:document" />
          <xs:element minOccurs="0" form="qualified" name="content" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createDocumentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" form="qualified" name="return" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findDocuments">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element minOccurs="0" form="qualified" name="query" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" form="qualified" name="metadata" type="ns1:metadata" />
          <xs:element form="qualified" name="highlight" type="xs:boolean" />
          <xs:element form="qualified" name="fromPage" type="xs:long" />
          <xs:element form="qualified" name="pageSize" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findDocumentsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" form="qualified" name="return" type="ns1:searchResult" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moveFolder">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="folderId" type="xs:long" />
          <xs:element form="qualified" name="parentFolderId" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moveFolderResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="findAllDocuments">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element minOccurs="0" form="qualified" name="query" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" form="qualified" name="metadata" type="ns1:metadata" />
          <xs:element form="qualified" name="highlight" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findAllDocumentsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" form="qualified" name="return" type="ns1:searchResult" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renameFolder">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="folderId" type="xs:long" />
          <xs:element form="qualified" name="name" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renameFolderResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="deleteFolder">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="folderId" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFolderResponse">
        <xs:sequence>
          <xs:element form="qualified" name="return" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteDocument">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="documentId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteDocumentResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="readDocumentById">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="documentId" type="xs:string" />
          <xs:element minOccurs="0" form="qualified" name="version" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="readDocumentByIdResponse">
        <xs:sequence>
          <xs:element minOccurs="0" form="qualified" name="return" type="ns1:document" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clearMetadata">
        <xs:sequence>
          <xs:element form="qualified" name="tenant" type="xs:string" />
          <xs:element form="qualified" name="documentId" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clearMetadataResponse">
        <xs:sequence>
          <xs:element form="qualified" name="return" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DMSFault" type="tns:DMSFault" />
      <xs:complexType name="DMSFault">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" type="xs:int" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="readFolders">
    <wsdl:part name="parameters" element="tns:readFolders" />
  </wsdl:message>
  <wsdl:message name="deleteFolderResponse">
    <wsdl:part name="parameters" element="tns:deleteFolderResponse" />
  </wsdl:message>
  <wsdl:message name="readFolderDocuments">
    <wsdl:part name="parameters" element="tns:readFolderDocuments" />
  </wsdl:message>
  <wsdl:message name="readDocumentContentResponse">
    <wsdl:part name="parameters" element="tns:readDocumentContentResponse" />
  </wsdl:message>
  <wsdl:message name="findAllDocuments">
    <wsdl:part name="parameters" element="tns:findAllDocuments" />
  </wsdl:message>
  <wsdl:message name="findDocumentsResponse">
    <wsdl:part name="parameters" element="tns:findDocumentsResponse" />
  </wsdl:message>
  <wsdl:message name="deleteDocumentResponse">
    <wsdl:part name="parameters" element="tns:deleteDocumentResponse" />
  </wsdl:message>
  <wsdl:message name="readFolderDocumentsResponse">
    <wsdl:part name="parameters" element="tns:readFolderDocumentsResponse" />
  </wsdl:message>
  <wsdl:message name="readDocumentByIdResponse">
    <wsdl:part name="parameters" element="tns:readDocumentByIdResponse" />
  </wsdl:message>
  <wsdl:message name="renameFolderResponse">
    <wsdl:part name="parameters" element="tns:renameFolderResponse" />
  </wsdl:message>
  <wsdl:message name="renameFolder">
    <wsdl:part name="parameters" element="tns:renameFolder" />
  </wsdl:message>
  <wsdl:message name="readDocumentContent">
    <wsdl:part name="parameters" element="tns:readDocumentContent" />
  </wsdl:message>
  <wsdl:message name="findAllDocumentsResponse">
    <wsdl:part name="parameters" element="tns:findAllDocumentsResponse" />
  </wsdl:message>
  <wsdl:message name="deleteDocument">
    <wsdl:part name="parameters" element="tns:deleteDocument" />
  </wsdl:message>
  <wsdl:message name="createFolder">
    <wsdl:part name="parameters" element="tns:createFolder" />
  </wsdl:message>
  <wsdl:message name="DMSException">
    <wsdl:part name="DMSException" element="tns:DMSFault" />
  </wsdl:message>
  <wsdl:message name="updateDocumentResponse">
    <wsdl:part name="parameters" element="tns:updateDocumentResponse" />
  </wsdl:message>
  <wsdl:message name="createFolderResponse">
    <wsdl:part name="parameters" element="tns:createFolderResponse" />
  </wsdl:message>
  <wsdl:message name="clearMetadataResponse">
    <wsdl:part name="parameters" element="tns:clearMetadataResponse" />
  </wsdl:message>
  <wsdl:message name="moveFolderDocuments">
    <wsdl:part name="parameters" element="tns:moveFolderDocuments" />
  </wsdl:message>
  <wsdl:message name="moveFolderResponse">
    <wsdl:part name="parameters" element="tns:moveFolderResponse" />
  </wsdl:message>
  <wsdl:message name="createDocumentResponse">
    <wsdl:part name="parameters" element="tns:createDocumentResponse" />
  </wsdl:message>
  <wsdl:message name="moveFolder">
    <wsdl:part name="parameters" element="tns:moveFolder" />
  </wsdl:message>
  <wsdl:message name="moveFolderDocumentsResponse">
    <wsdl:part name="parameters" element="tns:moveFolderDocumentsResponse" />
  </wsdl:message>
  <wsdl:message name="readFoldersResponse">
    <wsdl:part name="parameters" element="tns:readFoldersResponse" />
  </wsdl:message>
  <wsdl:message name="clearMetadata">
    <wsdl:part name="parameters" element="tns:clearMetadata" />
  </wsdl:message>
  <wsdl:message name="readDocumentById">
    <wsdl:part name="parameters" element="tns:readDocumentById" />
  </wsdl:message>
  <wsdl:message name="findDocuments">
    <wsdl:part name="parameters" element="tns:findDocuments" />
  </wsdl:message>
  <wsdl:message name="createDocument">
    <wsdl:part name="parameters" element="tns:createDocument" />
  </wsdl:message>
  <wsdl:message name="updateDocument">
    <wsdl:part name="parameters" element="tns:updateDocument" />
  </wsdl:message>
  <wsdl:message name="deleteFolder">
    <wsdl:part name="parameters" element="tns:deleteFolder" />
  </wsdl:message>
  <wsdl:portType name="DocumentService">
    <wsdl:operation name="updateDocument">
      <wsdl:input name="updateDocument" message="tns:updateDocument" />
      <wsdl:output name="updateDocumentResponse" message="tns:updateDocumentResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="readFolderDocuments">
      <wsdl:input name="readFolderDocuments" message="tns:readFolderDocuments" />
      <wsdl:output name="readFolderDocumentsResponse" message="tns:readFolderDocumentsResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="readDocumentContent">
      <wsdl:input name="readDocumentContent" message="tns:readDocumentContent" />
      <wsdl:output name="readDocumentContentResponse" message="tns:readDocumentContentResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="moveFolderDocuments">
      <wsdl:input name="moveFolderDocuments" message="tns:moveFolderDocuments" />
      <wsdl:output name="moveFolderDocumentsResponse" message="tns:moveFolderDocumentsResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="readFolders">
      <wsdl:input name="readFolders" message="tns:readFolders" />
      <wsdl:output name="readFoldersResponse" message="tns:readFoldersResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="createFolder">
      <wsdl:input name="createFolder" message="tns:createFolder" />
      <wsdl:output name="createFolderResponse" message="tns:createFolderResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="createDocument">
      <wsdl:input name="createDocument" message="tns:createDocument" />
      <wsdl:output name="createDocumentResponse" message="tns:createDocumentResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="findDocuments">
      <wsdl:input name="findDocuments" message="tns:findDocuments" />
      <wsdl:output name="findDocumentsResponse" message="tns:findDocumentsResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="moveFolder">
      <wsdl:input name="moveFolder" message="tns:moveFolder" />
      <wsdl:output name="moveFolderResponse" message="tns:moveFolderResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="findAllDocuments">
      <wsdl:input name="findAllDocuments" message="tns:findAllDocuments" />
      <wsdl:output name="findAllDocumentsResponse" message="tns:findAllDocumentsResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="renameFolder">
      <wsdl:input name="renameFolder" message="tns:renameFolder" />
      <wsdl:output name="renameFolderResponse" message="tns:renameFolderResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="deleteFolder">
      <wsdl:input name="deleteFolder" message="tns:deleteFolder" />
      <wsdl:output name="deleteFolderResponse" message="tns:deleteFolderResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="deleteDocument">
      <wsdl:input name="deleteDocument" message="tns:deleteDocument" />
      <wsdl:output name="deleteDocumentResponse" message="tns:deleteDocumentResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="readDocumentById">
      <wsdl:input name="readDocumentById" message="tns:readDocumentById" />
      <wsdl:output name="readDocumentByIdResponse" message="tns:readDocumentByIdResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
    <wsdl:operation name="clearMetadata">
      <wsdl:input name="clearMetadata" message="tns:clearMetadata" />
      <wsdl:output name="clearMetadataResponse" message="tns:clearMetadataResponse" />
      <wsdl:fault name="DMSException" message="tns:DMSException" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DocumentServiceSoapBinding" type="tns:DocumentService">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <PolicyReference xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy" URI="#WS2007FederationHttpBinding_IService_policy" />
    <wsdl:operation name="updateDocument">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="updateDocument">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="updateDocumentResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="readFolderDocuments">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="readFolderDocuments">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="readFolderDocumentsResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="readDocumentContent">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="readDocumentContent">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="readDocumentContentResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="moveFolderDocuments">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="moveFolderDocuments">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="moveFolderDocumentsResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="readFolders">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="readFolders">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="readFoldersResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createFolder">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="createFolder">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="createFolderResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDocument">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="createDocument">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="createDocumentResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDocuments">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="findDocuments">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="findDocumentsResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllDocuments">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="findAllDocuments">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="findAllDocumentsResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="moveFolder">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="moveFolder">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="moveFolderResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFolder">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="deleteFolder">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="deleteFolderResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameFolder">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="renameFolder">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="renameFolderResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteDocument">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="deleteDocument">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="deleteDocumentResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="readDocumentById">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="readDocumentById">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="readDocumentByIdResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearMetadata">
      <soap12:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" style="document" />
      <wsdl:input name="clearMetadata">
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output name="clearMetadataResponse">
        <soap12:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="DMSException">
        <soap12:fault use="literal" name="DMSException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DocumentService">
    <wsdl:port name="DocumentPort" binding="tns:DocumentServiceSoapBinding">
      <soap12:address location="https://lbsoa.intra.dcom.sk/soa/dms/document/1.0/documentservice" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>